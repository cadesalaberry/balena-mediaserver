version: "2.1"

x-s6-service: &s6-service
  restart: "on-failure"
  tmpfs:
    - /tmp
  environment: &s6-environment
    S6_VERBOSITY: 2
  entrypoint:
    - /bin/bash
    - -c
  command:
    - |
      [[ ${DISABLE,,} =~ true|yes|on|1 ]] && exit 0
      exec /init

x-tailscale-service: &tailscale-service
  cap_add:
    - NET_ADMIN
    - NET_RAW
    - SYS_MODULE
  labels:
    io.balena.features.kernel-modules: 1
  environment: &tailscale-environment
    TAILSCALE_SERVE_MODE: https
    TAILSCALE_USE_SSH: 1

x-linuxserver-service: &linuxserver-service
  <<:
    - *s6-service
    - *tailscale-service
  environment: &linuxserver-environment
    <<:
      - *s6-environment
      - *tailscale-environment
    PUID: "1000"
    PGID: "1000"

volumes:
  downloads: {}
  duplicati: {}
  jellyfin: {}
  letsencrypt: {}
  netdatalib: {}
  netdatacache: {}
  nzbhydra: {}
  ombi: {}
  overseerr: {}
  plex: {}
  prowlarr: {}
  proxy: {}
  radarr: {}
  sabnzbd: {}
  sonarr: {}
  syncthing: {}
  tautulli: {}
  tailscale: {}

services:
  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.duplicati
    environment:
      <<: *linuxserver-environment
      PUID: "0"
      PGID: "0"
      TAILSCALE_HOSTNAME: duplicati
      TAILSCALE_SERVE_PORT: 8200
    ports:
      - 127.0.0.1:8200:8200/tcp
    volumes:
      - duplicati:/config
      # any volumes that might be worth backing up
      - syncthing:/volumes/syncthing
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.jellyfin
    devices:
      - /dev/dri:/dev/dri
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: jellyfin
      TAILSCALE_SERVE_PORT: 8096
    ports:
      - 127.0.0.1:8096:8096/tcp
    volumes:
      - jellyfin:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.nzbhydra
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: nzbhydra
      TAILSCALE_SERVE_PORT: 5076
    ports:
      - 127.0.0.1:5076:5076/tcp
    volumes:
      - nzbhydra:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.ombi
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: ombi
      TAILSCALE_SERVE_PORT: 3579
    ports:
      - 127.0.0.1:3579:3579/tcp
    volumes:
      - ombi:/config

  # https://docs.linuxserver.io/images/docker-overseerr
  overseerr:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.overseerr
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: overseerr
      TAILSCALE_SERVE_PORT: 5055
    ports:
      - 127.0.0.1:5055:5055/tcp
    volumes:
      - overseerr:/config

  # https://docs.linuxserver.io/images/docker-plex
  plex:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.plex
    devices:
      - /dev/dri:/dev/dri
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: plex
      TAILSCALE_SERVE_PORT: 32400
    ports:
      - 127.0.0.1:32400:32400/tcp
    volumes:
      - plex:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-prowlarr
  prowlarr:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.prowlarr
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: prowlarr
      TAILSCALE_SERVE_PORT: 9696
    ports:
      - 127.0.0.1:9696:9696/tcp
    volumes:
      - prowlarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.radarr
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: radarr
      TAILSCALE_SERVE_PORT: 7878
    ports:
      - 127.0.0.1:7878:7878/tcp
    volumes:
      - radarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sabnzbd
  sabnzbd:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.sabnzbd
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: sabnzbd
      TAILSCALE_SERVE_PORT: 8080
    ports:
      - 127.0.0.1:8080:8080/tcp
    volumes:
      - sabnzbd:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.sonarr
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: sonarr
      TAILSCALE_SERVE_PORT: 8989
    ports:
      - 127.0.0.1:8989:8989/tcp
    volumes:
      - sonarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-syncthing
  syncthing:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.syncthing
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: syncthing
      TAILSCALE_SERVE_PORT: 8384
    ports:
      - 127.0.0.1:8384:8384/tcp
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    volumes:
      - syncthing:/config
      # any volumes that might be worth syncronizing between machines
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-tautulli
  tautulli:
    <<: *linuxserver-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.tautulli
    environment:
      <<: *linuxserver-environment
      TAILSCALE_HOSTNAME: tautulli
      TAILSCALE_SERVE_PORT: 8181
    ports:
      - 127.0.0.1:8181:8181/tcp
    volumes:
      - tautulli:/config

  # https://hub.docker.com/r/jc21/nginx-proxy-manager
  # https://github.com/NginxProxyManager/nginx-proxy-manager
  # https://nginxproxymanager.com/
  nginx-proxy-manager:
    <<:
      - *s6-service
      - *tailscale-service
    build:
      context: docker-mod
      dockerfile: Dockerfile.nginx-proxy-manager
    environment:
      <<:
        - *s6-environment
        - *tailscale-environment
      TAILSCALE_HOSTNAME: nginx
      TAILSCALE_SERVE_PORT: 81
    ports:
      - 80:80/tcp
      - 127.0.0.1:81:81/tcp
      - 443:443/tcp
    volumes:
      - proxy:/data
      - letsencrypt:/etc/letsencrypt

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata:v1.43.2@sha256:0116a5a4dbfedd84d80eba320f5d99d547da5d9bc0841adde0d7f13bed25f73a
    restart: "on-failure"
    privileged: true
    cap_add:
      - SYS_PTRACE
    environment:
      DOCKER_HOST: "/var/run/balena.sock"
      PGID: "990" # ls -nd /var/run/balena.sock | awk '{print $4}'
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.sysfs: 1
    ports:
      - 127.0.0.1:19999:19999/tcp
    security_opt:
      - apparmor:unconfined
    tmpfs:
      - /tmp
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata

  # https://tailscale.com/kb/1282/docker
  # https://hub.docker.com/r/tailscale/tailscale
  # https://tailscale.com/kb/1278/tailscaled
  # https://tailscale.com/kb/1241/tailscale-up
  # https://github.com/tailscale/tailscale/blob/main/cmd/containerboot/main.go
  tailscale:
    image: tailscale/tailscale:v1.54.1
    restart: "on-failure"
    environment:
      TS_STATE_DIR: /var/lib/tailscale
      TS_SOCKET: /var/run/tailscale/tailscaled.sock
      TS_USERSPACE: false
      TS_AUTH_ONCE: false
      TS_HOSTNAME: mediaserver
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    labels:
      io.balena.features.kernel-modules: 1
    tmpfs:
      - /tmp
      - /run
    volumes:
      - tailscale:/var/lib/tailscale
    entrypoint:
      - /bin/sh
      - -c
    command:
      - |
        modprobe tun || true
        modprobe wireguard || true
        mkdir -p /dev/net
        [ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200

        /usr/local/bin/containerboot &
        pid=$!

        sleep 5

        tailscale serve reset

        tailscale serve --bg --https=8200 http://localhost:8200
        tailscale serve --bg --https=8096 http://localhost:8096
        tailscale serve --bg --https=19999 http://localhost:19999
        tailscale serve --bg --https=6789 http://localhost:6789
        tailscale serve --bg --https=5076 http://localhost:5076
        tailscale serve --bg --https=3579 http://localhost:3579
        tailscale serve --bg --https=5055 http://localhost:5055
        tailscale serve --bg --https=32400 http://localhost:32400
        tailscale serve --bg --https=9696 http://localhost:9696
        tailscale serve --bg --https=81 http://localhost:81
        tailscale serve --bg --https=7878 http://localhost:7878
        tailscale serve --bg --https=8989 http://localhost:8989
        tailscale serve --bg --https=8080 http://localhost:8080
        tailscale serve --bg --https=8181 http://localhost:8181
        tailscale serve --bg --https=8384 http://localhost:8384

        tailscale serve status
        wait $pid
