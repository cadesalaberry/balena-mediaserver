#!/command/with-contenv bash
# shellcheck shell=bash

# https://github.com/tailscale-dev/docker-mod/blob/main/root/etc/s6-overlay/s6-rc.d/svc-tailscale/run

set -euo pipefail

# handle unassigned variables
TAILSCALE_USERSPACE="${TAILSCALE_USERSPACE:-true}"

FLAGS="--verbose=1"

if [[ ${TAILSCALE_USERSPACE,,} =~ true|yes|on|1 ]]; then
    echo '[!] using userspace networking'
    # https://tailscale.com/kb/1278/tailscaled/
    FLAGS="$FLAGS --tun=userspace-networking"
else
    echo '[!] using kernel networking'
    modprobe tun || true
    modprobe wireguard || true
    mkdir -p /dev/net
    [ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200
fi

# https://github.com/tailscale-dev/docker-mod/pull/8#issuecomment-1792262196
# https://tailscale.com/kb/1112/userspace-networking/
if [[ ${TAILSCALE_USERSPACE,,} =~ true|yes|on|1 ]] && [ -v TAILSCALE_USE_EXIT_NODE ]; then
    echo '[!] starting socks5 and http proxy servers on ports 3215 and 3214'
    FLAGS="$FLAGS --socks5-server=localhost:3215 --outbound-http-proxy-listen=localhost:3214"
fi

if [ -v TAILSCALE_STATE_DIR ]; then
    mkdir -p "${TAILSCALE_STATE_DIR}"
    FLAGS="$FLAGS --statedir=${TAILSCALE_STATE_DIR}"
else
    FLAGS="$FLAGS --state=mem: --statedir=/tmp"
fi

# shellcheck disable=SC2086
tailscaled $FLAGS 2>&1 &
pid=$!

# https://github.com/just-containers/s6-overlay/issues/545
graceful_stop() {
    # https://tailscale.com/kb/1080/cli/#down
    echo '[!] disconnecting from tailscale'
    tailscale down --accept-risk=all
}

trap "graceful_stop" EXIT

wait $pid
