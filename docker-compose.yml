version: "2.1"

x-s6-service: &s6-service
  restart: "on-failure"
  tmpfs:
    - /tmp
  environment: &s6-environment
    S6_VERBOSITY: 2
    PUID: "1000"
    PGID: "1000"
  entrypoint:
    - /bin/bash
    - -c
  command:
    - |
      if [[ ${DISABLE,,} =~ true|yes|on|1 ]]; then
        echo "DISABLE is truthy, exiting..."
        exit 0
      fi
      exec /init

volumes:
  downloads: {}
  duplicati: {}
  jellyfin: {}
  letsencrypt: {}
  netdatalib: {}
  netdatacache: {}
  nzbhydra: {}
  ombi: {}
  overseerr: {}
  plex: {}
  prowlarr: {}
  proxy: {}
  radarr: {}
  sabnzbd: {}
  sonarr: {}
  syncthing: {}
  tautulli: {}
  tailscale: {}

services:

  # https://hub.docker.com/r/tailscale/tailscale
  # https://github.com/tailscale/tailscale/blob/main/cmd/containerboot/main.go
  # https://tailscale.com/kb/1282/docker
  # https://tailscale.com/kb/1278/tailscaled
  # https://tailscale.com/kb/1241/tailscale-up
  # https://tailscale.com/kb/1242/tailscale-serve
  # https://tailscale.com/kb/1311/tailscale-funnel
  # https://tailscale.com/blog/docker-tailscale-guide
  tailscale:
    build: tailscale
    restart: "on-failure"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    labels:
      io.balena.features.kernel-modules: 1
    environment:
      TS_HOSTNAME: mediaserver
    volumes:
      - tailscale:/var/lib/tailscale
    network_mode: host

  # https://hub.docker.com/r/jc21/nginx-proxy-manager
  # https://github.com/NginxProxyManager/nginx-proxy-manager
  # https://nginxproxymanager.com/
  nginx:
    <<: *s6-service
    image: jc21/nginx-proxy-manager:2.11.3@sha256:5bd2aae54ac0b6f4ef6777143ab736baf5366807894a4c7fca7bfa2fbaf1489c
    volumes:
      - proxy:/data
      - letsencrypt:/etc/letsencrypt
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - 127.0.0.1:81:81/tcp

  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    <<: *s6-service
    image: lscr.io/linuxserver/duplicati:2.0.8@sha256:b97f7bfa6d1a145f858bf8db470190ab97b135ea73a6cab35fd32476c8768063
    environment:
      <<: *s6-environment
      PUID: "0"
      PGID: "0"
    volumes:
      - duplicati:/config
      # any volumes that might be worth backing up
      - syncthing:/volumes/syncthing
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - letsencrypt:/volumes/letsencrypt
      - tautulli:/volumes/tautulli
    ports:
      - 127.0.0.1:8200:8200/tcp

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    <<: *s6-service
    image: lscr.io/linuxserver/jellyfin:10.9.10@sha256:0da2fb716f6e7eaeea082d81418f80c4d2adab9407801629790ef3c2d0b743ab
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - jellyfin:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:8096:8096/tcp

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    <<: *s6-service
    image: lscr.io/linuxserver/nzbhydra2:7.5.0@sha256:81f85d076bb13411dae707e4ca8eabe1164b180ffe6031e797cb02741807994f
    volumes:
      - nzbhydra:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:5076:5076/tcp

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    <<: *s6-service
    image: lscr.io/linuxserver/ombi:4.44.1@sha256:2df9aba8533ce892b7b7cff3e49f095e5fa2900ac05d035607219cef721af94a
    volumes:
      - ombi:/config
    ports:
      - 127.0.0.1:3579:3579/tcp

  # https://docs.linuxserver.io/images/docker-overseerr
  overseerr:
    <<: *s6-service
    image: lscr.io/linuxserver/overseerr:1.33.2@sha256:24c902e4091f442aae63931663e4eaf95bb2c8a345a66936c2f6b81b281a4c3b
    volumes:
      - overseerr:/config
    ports:
      - 127.0.0.1:5055:5055/tcp

  # https://docs.linuxserver.io/images/docker-plex
  plex:
    <<: *s6-service
    image: lscr.io/linuxserver/plex:1.40.5@sha256:968263aa295c92bbc4ad6a1cc848d0275a5154cecc1d88e5f2f3fed3123be523
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - plex:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:32400:32400/tcp

  # https://docs.linuxserver.io/images/docker-prowlarr
  prowlarr:
    <<: *s6-service
    image: lscr.io/linuxserver/prowlarr:1.21.2-develop@sha256:18bf32798d9d16e0b730fea5abfd23c813b3c63a65165861b3557bb12e5c693e
    volumes:
      - prowlarr:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:9696:9696/tcp

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    <<: *s6-service
    image: lscr.io/linuxserver/radarr:5.9.1@sha256:47acec85a0d92d107096088aebe83d1d0a434def34e5bac317fff18ca28741ae
    volumes:
      - radarr:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:7878:7878/tcp

  # https://docs.linuxserver.io/images/docker-sabnzbd
  sabnzbd:
    <<: *s6-service
    image: lscr.io/linuxserver/sabnzbd:4.3.3@sha256:223197e9cbb70112244e44ba9660ba7ce1d2128771b8a03ad38e20f85c953583
    volumes:
      - sabnzbd:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:8080:8080/tcp

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    <<: *s6-service
    image: lscr.io/linuxserver/sonarr:4.0.9@sha256:879f5f35b05566f71296bad0f3704709103568a6b4f42f5959543f5322728723
    volumes:
      - sonarr:/config
      - downloads:/downloads
    ports:
      - 127.0.0.1:8989:8989/tcp

  # https://docs.linuxserver.io/images/docker-syncthing
  syncthing:
    <<: *s6-service
    image: lscr.io/linuxserver/syncthing:1.27.10@sha256:d5481de808a1de5a13b814a922b1f6de5fcde64c1ca95b0a065218b56570fae3
    volumes:
      - syncthing:/config
      # any volumes that might be worth syncronizing between machines
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli
    ports:
      - 127.0.0.1:8384:8384/tcp
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp

  # https://docs.linuxserver.io/images/docker-tautulli
  tautulli:
    <<: *s6-service
    image: lscr.io/linuxserver/tautulli:2.14.4@sha256:19d9f3ec9419c0eff541edc6a06eea0cdf7591786f01be29f702d9194d3d12cb
    volumes:
      - tautulli:/config
    ports:
      - 127.0.0.1:8181:8181/tcp

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata:v1.47.0@sha256:84ae61184a74d2c777c44d010b777d7bfa2a251c9cea4bf84880fb232ef93b57
    restart: "on-failure"
    privileged: true
    cap_add:
      - SYS_PTRACE
    environment:
      DOCKER_HOST: "/var/run/balena.sock"
      PGID: "990" # ls -nd /var/run/balena.sock | awk '{print $4}'
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.sysfs: 1
    security_opt:
      - apparmor:unconfined
    tmpfs:
      - /tmp
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
    ports:
      - 127.0.0.1:19999:19999/tcp
