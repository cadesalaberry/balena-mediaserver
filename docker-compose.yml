version: "2.1"

x-s6-service: &s6-service
  restart: "on-failure"
  tmpfs:
    - /tmp
  environment: &s6-environment
    S6_VERBOSITY: 2
  entrypoint:
    - /bin/bash
    - -c
  command:
    - |
      [[ ${DISABLE,,} =~ true|yes|on|1 ]] && exit 0
      exec /init

x-linuxserver-service: &linuxserver-service
  <<: *s6-service
  environment: &linuxserver-environment
    <<: *s6-environment
    PUID: "1000"
    PGID: "1000"

volumes:
  downloads: {}
  duplicati: {}
  jellyfin: {}
  letsencrypt: {}
  netdatalib: {}
  netdatacache: {}
  nzbhydra: {}
  ombi: {}
  overseerr: {}
  plex: {}
  prowlarr: {}
  proxy: {}
  radarr: {}
  sabnzbd: {}
  sonarr: {}
  syncthing: {}
  tautulli: {}
  tailscale: {}

services:
  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/duplicati:2.0.7@sha256:b102c711023e11a0daf7dc43cbe6cfe4207d722d9666a786f0078edc1719fb1b
    environment:
      <<: *linuxserver-environment
      PUID: "0"
      PGID: "0"
    ports:
      - 127.0.0.1:8200:8200/tcp
    volumes:
      - duplicati:/config
      # any volumes that might be worth backing up
      - syncthing:/volumes/syncthing
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/jellyfin:10.8.13@sha256:118835d948e13fccba8c715d996e71cdfb74dc6a1ef9ec7634f55d2070b9688c
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 127.0.0.1:8096:8096/tcp
    volumes:
      - jellyfin:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/nzbhydra2:6.0.0@sha256:d0cb6bc071ec294744c6588601532b112471b4e7ab81a6281d8b57f17444600f
    ports:
      - 127.0.0.1:5076:5076/tcp
    volumes:
      - nzbhydra:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/ombi:4.43.5@sha256:014ed9815d494fb95aa47fe4698a9a2a9c5371506bd04a1d5dbd8372b4ebf2c4
    ports:
      - 127.0.0.1:3579:3579/tcp
    volumes:
      - ombi:/config

  # https://docs.linuxserver.io/images/docker-overseerr
  overseerr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/overseerr:1.33.2@sha256:edac39725d48761481c02107d3077a825c3cab207e0565b8b213ced5143706ea
    ports:
      - 127.0.0.1:5055:5055/tcp
    volumes:
      - overseerr:/config

  # https://docs.linuxserver.io/images/docker-plex
  plex:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/plex:1.40.2@sha256:15eaab9b1447e413b3f28df1cad8e5c87e4a06ac2b0eaf09aca8c6ae11feed3c
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 127.0.0.1:32400:32400/tcp
    volumes:
      - plex:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-prowlarr
  prowlarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/prowlarr:1.16.2-develop@sha256:d06f21588066cd66620b351b888caa551b16ba4e9f61387af3693332d674cb1c
    ports:
      - 127.0.0.1:9696:9696/tcp
    volumes:
      - prowlarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/radarr:5.4.6@sha256:e6bccb9bd69f3dba111716c6789152d5577217adc27f8f96642e511defaefbb6
    ports:
      - 127.0.0.1:7878:7878/tcp
    volumes:
      - radarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sabnzbd
  sabnzbd:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/sabnzbd:4.2.3@sha256:9d7c22bb7936fbf96a164f8d4ad50c165d1cbb83adba84f4971ab5f21dd79a93
    ports:
      - 127.0.0.1:8080:8080/tcp
    volumes:
      - sabnzbd:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/sonarr:4.0.4@sha256:58fca88cafda8915f45b780124c767d5b63b7a1194d4781edc8c4b7fb0d6e9c3
    ports:
      - 127.0.0.1:8989:8989/tcp
    volumes:
      - sonarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-syncthing
  syncthing:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/syncthing:1.27.6@sha256:0f69786427f711e506fefd6eb66645817dbf99c91b7d37860158bb504e63f756
    ports:
      - 127.0.0.1:8384:8384/tcp
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    volumes:
      - syncthing:/config
      # any volumes that might be worth syncronizing between machines
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-tautulli
  tautulli:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/tautulli:2.13.4@sha256:d070d1b9d60c9b6bc8b07357529e01024fa568f0efe9317ce19936ca30eea57c
    ports:
      - 127.0.0.1:8181:8181/tcp
    volumes:
      - tautulli:/config

  # https://hub.docker.com/r/jc21/nginx-proxy-manager
  # https://github.com/NginxProxyManager/nginx-proxy-manager
  # https://nginxproxymanager.com/
  nginx-proxy-manager:
    <<: *s6-service
    image: jc21/nginx-proxy-manager:2.11.1@sha256:7f67eed835ed95108623183b35471f953630a7be480d6a2009bd79c68667ac77
    ports:
      - 80:80/tcp
      - 127.0.0.1:81:81/tcp
      - 443:443/tcp
    volumes:
      - proxy:/data
      - letsencrypt:/etc/letsencrypt

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata:v1.45.3@sha256:ba6ec15dfcc32c294d749c0ed91a846ce73be41070b6ceef258d9d05308f490f
    restart: "on-failure"
    privileged: true
    cap_add:
      - SYS_PTRACE
    environment:
      DOCKER_HOST: "/var/run/balena.sock"
      PGID: "990" # ls -nd /var/run/balena.sock | awk '{print $4}'
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.sysfs: 1
    ports:
      - 127.0.0.1:19999:19999/tcp
    security_opt:
      - apparmor:unconfined
    tmpfs:
      - /tmp
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata

  # https://hub.docker.com/r/tailscale/tailscale
  # https://github.com/tailscale/tailscale/blob/main/cmd/containerboot/main.go
  # https://tailscale.com/kb/1282/docker
  # https://tailscale.com/kb/1278/tailscaled
  # https://tailscale.com/kb/1241/tailscale-up
  # https://tailscale.com/kb/1242/tailscale-serve
  # https://tailscale.com/kb/1311/tailscale-funnel
  tailscale:
    build: tailscale
    restart: "on-failure"
    environment:
      TS_STATE_DIR: /var/lib/tailscale
      TS_USERSPACE: false
      TS_AUTH_ONCE: false
      TS_HOSTNAME: mediaserver
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    labels:
      io.balena.features.kernel-modules: 1
    tmpfs:
      - /tmp
      - /run
    volumes:
      - tailscale:/var/lib/tailscale
