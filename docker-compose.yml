version: "2.1"

x-s6-service: &s6-service
  restart: "on-failure"
  tmpfs:
    - /tmp
  environment: &s6-environment
    S6_VERBOSITY: 2
  entrypoint:
    - /bin/bash
    - -c
  command:
    - |
      [[ ${DISABLE,,} =~ true|yes|on|1 ]] && exit 0
      exec /init

x-linuxserver-service: &linuxserver-service
  <<: *s6-service
  environment: &linuxserver-environment
    <<: *s6-environment
    PUID: "1000"
    PGID: "1000"

volumes:
  downloads: {}
  duplicati: {}
  jellyfin: {}
  letsencrypt: {}
  netdatalib: {}
  netdatacache: {}
  nzbhydra: {}
  ombi: {}
  overseerr: {}
  plex: {}
  prowlarr: {}
  proxy: {}
  radarr: {}
  sabnzbd: {}
  sonarr: {}
  syncthing: {}
  tautulli: {}
  tailscale: {}

services:
  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/duplicati:2.0.8@sha256:e1e362dfb1691c0a49de89ed0cddf36c1188ad7f8a6328c23761cf5ef89ba7af
    environment:
      <<: *linuxserver-environment
      PUID: "0"
      PGID: "0"
    ports:
      - 127.0.0.1:8200:8200/tcp
    volumes:
      - duplicati:/config
      # any volumes that might be worth backing up
      - syncthing:/volumes/syncthing
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/jellyfin:10.9.7@sha256:d3d20076f277fd958c799e75f6f6bfdbf9a2c5a8f5b354b11223071d0691ad6a
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 127.0.0.1:8096:8096/tcp
    volumes:
      - jellyfin:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/nzbhydra2:7.2.3@sha256:475092ffd9527ff12691a77ca656b6fe3e7bfafcb7af189eca17bff1e3c02239
    ports:
      - 127.0.0.1:5076:5076/tcp
    volumes:
      - nzbhydra:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/ombi:4.43.5@sha256:b85407d9f13163dfdd9d8d38ed71a292898150e8863bd6d8fa13e39d31ec7ed6
    ports:
      - 127.0.0.1:3579:3579/tcp
    volumes:
      - ombi:/config

  # https://docs.linuxserver.io/images/docker-overseerr
  overseerr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/overseerr:1.33.2@sha256:dafb573df69dcdc9e354e53ca7e70f664e0a6d9f3caa021c991046b8bd76989b
    ports:
      - 127.0.0.1:5055:5055/tcp
    volumes:
      - overseerr:/config

  # https://docs.linuxserver.io/images/docker-plex
  plex:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/plex:1.40.3@sha256:3a449d946fdaabc2e05591cfcafc03dbc42ecd5fa4538da6956860f1e6368cad
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 127.0.0.1:32400:32400/tcp
    volumes:
      - plex:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-prowlarr
  prowlarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/prowlarr:1.20.1-develop@sha256:caf1888465bfdc0b61f6b45f0402018e248d459a990f12ecc1eb7020954eb64d
    ports:
      - 127.0.0.1:9696:9696/tcp
    volumes:
      - prowlarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/radarr:5.7.0@sha256:1eaf9e83fca2b9170d4f49f6c0e55ba38693718e7815743a9ec297d199ab1e73
    ports:
      - 127.0.0.1:7878:7878/tcp
    volumes:
      - radarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sabnzbd
  sabnzbd:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/sabnzbd:4.3.2@sha256:d9ad6d86542e07d90e6da20b2adb9e89cb26ec1dc1d95bd88eeceef65c12f94b
    ports:
      - 127.0.0.1:8080:8080/tcp
    volumes:
      - sabnzbd:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/sonarr:4.0.6@sha256:a9f25c54b7eb8ecf11e506e90ee7eab9e9786143e08eeb76d5bfc3e82531eeab
    ports:
      - 127.0.0.1:8989:8989/tcp
    volumes:
      - sonarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-syncthing
  syncthing:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/syncthing:1.27.9@sha256:6fb87abe19730aad01b6511d660a0664be424986ae662b85eb76f0ce585c4890
    ports:
      - 127.0.0.1:8384:8384/tcp
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    volumes:
      - syncthing:/config
      # any volumes that might be worth syncronizing between machines
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-tautulli
  tautulli:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/tautulli:2.14.3@sha256:3234e3c9cb8863179aa9a1ca04e5f365388c89ebd54be77dbdce300ad008dba4
    ports:
      - 127.0.0.1:8181:8181/tcp
    volumes:
      - tautulli:/config

  # https://hub.docker.com/r/jc21/nginx-proxy-manager
  # https://github.com/NginxProxyManager/nginx-proxy-manager
  # https://nginxproxymanager.com/
  nginx-proxy-manager:
    <<: *s6-service
    image: jc21/nginx-proxy-manager:2.11.3@sha256:5bd2aae54ac0b6f4ef6777143ab736baf5366807894a4c7fca7bfa2fbaf1489c
    ports:
      - 80:80/tcp
      - 127.0.0.1:81:81/tcp
      - 443:443/tcp
    volumes:
      - proxy:/data
      - letsencrypt:/etc/letsencrypt

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata:v1.46.1@sha256:cdf9aea9143f486c214f0597a6d58b4f8618bff4561fad410b5de786867ef472
    restart: "on-failure"
    privileged: true
    cap_add:
      - SYS_PTRACE
    environment:
      DOCKER_HOST: "/var/run/balena.sock"
      PGID: "990" # ls -nd /var/run/balena.sock | awk '{print $4}'
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.sysfs: 1
    ports:
      - 127.0.0.1:19999:19999/tcp
    security_opt:
      - apparmor:unconfined
    tmpfs:
      - /tmp
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata

  # https://hub.docker.com/r/tailscale/tailscale
  # https://github.com/tailscale/tailscale/blob/main/cmd/containerboot/main.go
  # https://tailscale.com/kb/1282/docker
  # https://tailscale.com/kb/1278/tailscaled
  # https://tailscale.com/kb/1241/tailscale-up
  # https://tailscale.com/kb/1242/tailscale-serve
  # https://tailscale.com/kb/1311/tailscale-funnel
  tailscale:
    build: tailscale
    restart: "on-failure"
    environment:
      TS_STATE_DIR: /var/lib/tailscale
      TS_USERSPACE: false
      TS_AUTH_ONCE: false
      TS_HOSTNAME: mediaserver
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    labels:
      io.balena.features.kernel-modules: 1
    tmpfs:
      - /tmp
      - /run
    volumes:
      - tailscale:/var/lib/tailscale
