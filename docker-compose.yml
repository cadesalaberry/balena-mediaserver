version: "2.1"

x-s6-service: &s6-service
  restart: "on-failure"
  tmpfs:
    - /tmp
  environment: &s6-environment
    S6_VERBOSITY: 2
  entrypoint:
    - /bin/bash
    - -c
  command:
    - |
      [[ ${DISABLE,,} =~ true|yes|on|1 ]] && exit 0
      exec /init

x-linuxserver-service: &linuxserver-service
  <<: *s6-service
  environment: &linuxserver-environment
    <<: *s6-environment
    PUID: "1000"
    PGID: "1000"

volumes:
  downloads: {}
  duplicati: {}
  jellyfin: {}
  letsencrypt: {}
  netdatalib: {}
  netdatacache: {}
  nzbhydra: {}
  ombi: {}
  overseerr: {}
  plex: {}
  prowlarr: {}
  proxy: {}
  radarr: {}
  sabnzbd: {}
  sonarr: {}
  syncthing: {}
  tautulli: {}
  tailscale: {}

services:
  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/duplicati:2.0.7@sha256:34dff9e969af791dab1ab350dc2266694d57462ecff4f50d7ed99ba6fd956900
    environment:
      <<: *linuxserver-environment
      PUID: "0"
      PGID: "0"
    ports:
      - 127.0.0.1:8200:8200/tcp
    volumes:
      - duplicati:/config
      # any volumes that might be worth backing up
      - syncthing:/volumes/syncthing
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/jellyfin:10.8.13@sha256:deb61ff251882fb21e5187b7d1988e84ea438626300041f7d9474a5dc0618e24
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 127.0.0.1:8096:8096/tcp
    volumes:
      - jellyfin:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/nzbhydra2:5.3.5@sha256:371f873751bd3707380b4d37d9506f2ede805af97490b2903d161a440d2242d7
    ports:
      - 127.0.0.1:5076:5076/tcp
    volumes:
      - nzbhydra:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/ombi:4.43.5@sha256:701698f4374ec5892cfb4bf9bb372d0aa6198a2a44a096260a7c2e1701738dc3
    ports:
      - 127.0.0.1:3579:3579/tcp
    volumes:
      - ombi:/config

  # https://docs.linuxserver.io/images/docker-overseerr
  overseerr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/overseerr:1.33.2@sha256:9360e386f287206c7ff367c4f8ef947bd24f6a2a169cc14d7e7b8832258edbd1
    ports:
      - 127.0.0.1:5055:5055/tcp
    volumes:
      - overseerr:/config

  # https://docs.linuxserver.io/images/docker-plex
  plex:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/plex:1.32.8@sha256:8e038b79487919c2aefe976b690067df88113aec21a3d490837584f958c72412
    devices:
      - /dev/dri:/dev/dri
    ports:
      - 127.0.0.1:32400:32400/tcp
    volumes:
      - plex:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-prowlarr
  prowlarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/prowlarr:1.11.1-develop@sha256:07cdb6877cf6c4fff8ac05b80150f92244f189be4a68a4be611d105d9702e075
    ports:
      - 127.0.0.1:9696:9696/tcp
    volumes:
      - prowlarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/radarr:5.1.3@sha256:b4ea6d2132710253d14b2543a3acf6ad63c3feca9afd39e7de806592ec1ef466
    ports:
      - 127.0.0.1:7878:7878/tcp
    volumes:
      - radarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sabnzbd
  sabnzbd:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/sabnzbd:4.1.0@sha256:2e8400f3b64983a54c0f3486ae705e9f1d11d155b889ebf5907713859e823336
    ports:
      - 127.0.0.1:8080:8080/tcp
    volumes:
      - sabnzbd:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/sonarr:3.0.10@sha256:13fbee7aa88e58981b5029f70e4f4b4051819fd75b06a1eebac541e640da8447
    ports:
      - 127.0.0.1:8989:8989/tcp
    volumes:
      - sonarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-syncthing
  syncthing:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/syncthing:1.27.1@sha256:6c3c0ff41db1793cac9662457c38c141963ccdf126f1266c9435aea1a54f6e98
    ports:
      - 127.0.0.1:8384:8384/tcp
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    volumes:
      - syncthing:/config
      # any volumes that might be worth syncronizing between machines
      - plex:/volumes/plex
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-tautulli
  tautulli:
    <<: *linuxserver-service
    image: lscr.io/linuxserver/tautulli:2.13.4@sha256:54d34b0695eb536c7fe648dd34e5f7bd9247a974166e758fdde9130630fe6c97
    ports:
      - 127.0.0.1:8181:8181/tcp
    volumes:
      - tautulli:/config

  # https://hub.docker.com/r/jc21/nginx-proxy-manager
  # https://github.com/NginxProxyManager/nginx-proxy-manager
  # https://nginxproxymanager.com/
  nginx-proxy-manager:
    <<: *s6-service
    image: jc21/nginx-proxy-manager:2.10.4@sha256:081c4c544ad5da81022b3b030c2ba50175923bc87a534bce8b52f870e695e9f1
    ports:
      - 80:80/tcp
      - 127.0.0.1:81:81/tcp
      - 443:443/tcp
    volumes:
      - proxy:/data
      - letsencrypt:/etc/letsencrypt

  # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata:v1.44.1@sha256:4363d046c878507036b977e9716828bffc26913b1b3f977e83015d370ffc154a
    restart: "on-failure"
    privileged: true
    cap_add:
      - SYS_PTRACE
    environment:
      DOCKER_HOST: "/var/run/balena.sock"
      PGID: "990" # ls -nd /var/run/balena.sock | awk '{print $4}'
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.sysfs: 1
    ports:
      - 127.0.0.1:19999:19999/tcp
    security_opt:
      - apparmor:unconfined
    tmpfs:
      - /tmp
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata

  # https://hub.docker.com/r/tailscale/tailscale
  # https://github.com/tailscale/tailscale/blob/main/cmd/containerboot/main.go
  # https://tailscale.com/kb/1282/docker
  # https://tailscale.com/kb/1278/tailscaled
  # https://tailscale.com/kb/1241/tailscale-up
  # https://tailscale.com/kb/1242/tailscale-serve
  # https://tailscale.com/kb/1311/tailscale-funnel
  tailscale:
    build: tailscale
    restart: "on-failure"
    environment:
      TS_STATE_DIR: /var/lib/tailscale
      TS_USERSPACE: false
      TS_AUTH_ONCE: false
      TS_HOSTNAME: mediaserver
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    labels:
      io.balena.features.kernel-modules: 1
    tmpfs:
      - /tmp
      - /run
    volumes:
      - tailscale:/var/lib/tailscale
