version: "2.1"

volumes:
  downloads: {}
  duplicati: {}
  jellyfin: {}
  letsencrypt: {}
  netdatalib: {}
  netdatacache: {}
  nzbget: {}
  nzbhydra: {}
  ombi: {}
  overseerr: {}
  plex: {}
  prowlarr: {}
  proxy: {}
  radarr: {}
  sabnzbd: {}
  sonarr: {}
  syncthing: {}
  tailscale: {}
  tautulli: {}

services:
  # https://docs.linuxserver.io/images/docker-plex
  plex:
    image: linuxserver/plex:1.32.5@sha256:b7c4f7b424a0ddd4fb2b68d823371ce98de0ea7801212f96e5caf6b1ff56d5d3
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    devices:
      - /dev/dri:/dev/dri
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 32400:32400/tcp
    tmpfs:
      - /tmp
    volumes:
      - plex:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-jellyfin
  jellyfin:
    image: linuxserver/jellyfin:10.8.10@sha256:167fb73634860ef5506b1760838dcdb2870fdb24e3a27b5b53104c54a14e5991
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    devices:
      - /dev/dri:/dev/dri
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 8096:8096/tcp
      - 7359:7359/udp
    tmpfs:
      - /tmp
    volumes:
      - jellyfin:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-nzbget
  nzbget:
    image: linuxserver/nzbget:21.1.20230119@sha256:ed58a6471591126adee01e704d35264979640bede1fca7ffa13a21d6643c5a18
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:6789:6789/tcp
    tmpfs:
      - /tmp
    volumes:
      - nzbget:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-sonarr
  sonarr:
    image: linuxserver/sonarr:3.0.10@sha256:6caa76b2e0a2bd56132f957b086cb7a57e1b03ee70bb5cfd61b373319f2c393c
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    depends_on:
      - nzbhydra
      - nzbget
      - prowlarr
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:8989:8989/tcp
    tmpfs:
      - /tmp
    volumes:
      - sonarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-radarr
  radarr:
    image: linuxserver/radarr:4.6.4@sha256:db0f24f8a795d2b8cb871f02152716fed0f709889036dc4e599a247b07831a5f
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    depends_on:
      - nzbhydra
      - nzbget
      - prowlarr
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:7878:7878/tcp
    tmpfs:
      - /tmp
    volumes:
      - radarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-prowlarr
  prowlarr:
    image: linuxserver/prowlarr:1.8.0-develop@sha256:b790c0eb45f32d53556c89de1bd21ae75fffcb9c432c1fa23b22f2d854080b17
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:9696:9696/tcp
    tmpfs:
      - /tmp
    volumes:
      - prowlarr:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-nzbhydra
  nzbhydra:
    image: linuxserver/nzbhydra2:5.1.10@sha256:9099b5b1ce8f5193895a6f8575069f8eafea43436bd16790e418bf6d2fcfed91
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:5076:5076/tcp
    tmpfs:
      - /tmp
    volumes:
      - nzbhydra:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-ombi
  ombi:
    image: linuxserver/ombi:4.39.1@sha256:a7f0d748625a469c6f30a59cb426e38fb3b7b7931d09ab85d3bc8033ccf5d1fe
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:3579:3579/tcp
    tmpfs:
      - /tmp
    volumes:
      - ombi:/config

  # https://docs.linuxserver.io/images/docker-overseerr
  overseerr:
    image: lscr.io/linuxserver/overseerr:1.33.2@sha256:ff18f6c877ac983916c2d076c94e7dcee44f1bbc236e440873004dfba8bb23ab
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:5055:5055/tcp
    tmpfs:
      - /tmp
    volumes:
      - overseerr:/config

  # https://docs.linuxserver.io/images/docker-sabnzbd
  sabnzbd:
    image: linuxserver/sabnzbd:4.0.3@sha256:36e811210c551c6e2d693923860ca2be02071504003ea13652ebccaf9c209871
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:8080:8080/tcp
    tmpfs:
      - /tmp
    volumes:
      - sabnzbd:/config
      - downloads:/downloads

  # https://docs.linuxserver.io/images/docker-tautulli
  tautulli:
    image: linuxserver/tautulli:2.12.5@sha256:70230375706467d54bf453b5d775fe412ab034a88aba60b94e009fa0d13ebf4f
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:8181:8181/tcp
    tmpfs:
      - /tmp
    volumes:
      - tautulli:/config

    # https://hub.docker.com/r/netdata/netdata
  netdata:
    image: netdata/netdata:v1.41.0@sha256:2801d57b2050bc9071be8279d6f70a3ffe71a7881c84b524104080375ae0cb46
    privileged: true
    cap_add:
      - SYS_PTRACE
    environment:
      DOCKER_HOST: "/var/run/balena.sock"
      PGID: "990" # ls -nd /var/run/balena.sock | awk '{print $4}'
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.supervisor-api: 1
      io.balena.features.sysfs: 1
    ports:
      - 127.0.0.1:19999:19999/tcp
    security_opt:
      - apparmor:unconfined
    tmpfs:
      - /tmp
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata

  # https://docs.linuxserver.io/images/docker-duplicati
  duplicati:
    image: lscr.io/linuxserver/duplicati:v2.0.6.3-2.0.6.3_beta_2021-06-17-ls160@sha256:9cf7c7a14bf1474d44aa29d329552bf32af58090f4cfa5e61e35a88b2cd4677e
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "0"
      PGID: "0"
    ports:
      - 127.0.0.1:8200:8200/tcp
    tmpfs:
      - /tmp
    volumes:
      - duplicati:/config
      # any volumes that might be worth backing up
      - syncthing:/volumes/syncthing
      - plex:/volumes/plex
      - nzbget:/volumes/nzbget
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - tailscale:/volumes/tailscale
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://docs.linuxserver.io/images/docker-syncthing
  syncthing:
    image: lscr.io/linuxserver/syncthing:1.23.6@sha256:8f0e9bb116dcea2bf8d97d4956a8232e440d8c161c3db6e21174ed461fd30ab0
    entrypoint: /bin/sh -c "[ -n \"${DISABLE}\" ] || exec /init"
    restart: on-failure
    environment:
      PUID: "1000"
      PGID: "1000"
    ports:
      - 127.0.0.1:8384:8384/tcp
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    tmpfs:
      - /tmp
    volumes:
      - syncthing:/config
      # any volumes that might be worth syncronizing between machines
      - plex:/volumes/plex
      - nzbget:/volumes/nzbget
      - sonarr:/volumes/sonarr
      - radarr:/volumes/radarr
      - nzbhydra:/volumes/nzbhydra
      - jellyfin:/volumes/jellyfin
      - prowlarr:/volumes/prowlarr
      - ombi:/volumes/ombi
      - overseerr:/volumes/overseerr
      - sabnzbd:/volumes/sabnzbd
      - tailscale:/volumes/tailscale
      - downloads:/volumes/downloads
      - proxy:/volumes/proxy
      - tautulli:/volumes/tautulli

  # https://hub.docker.com/r/jc21/nginx-proxy-manager
  proxy:
    image: jc21/nginx-proxy-manager:2.10.3@sha256:e5407dfe0577301171f403ec6b8a01b87eca5420416a907f9c42775428e22fee
    ports:
      - 80:80/tcp
      - 127.0.0.1:81:81/tcp
      - 443:443/tcp
    tmpfs:
      - /tmp
    volumes:
      - proxy:/data
      - letsencrypt:/etc/letsencrypt

  # https://hub.docker.com/r/tailscale/tailscale
  tailscale:
    image: tailscale/tailscale:v1.44.0@sha256:a1a18e145f9dd0d67ede7ce88f2049eb5ae0c0706f1cea096147170410c2fb57
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_MODULE
    labels:
      - io.balena.features.kernel-modules=1
    tmpfs:
      - /tmp
      - /var/run/
    volumes:
      - tailscale:/var/lib/tailscale
    environment:
      TS_STATE_DIR: "/var/lib/tailscale"
      TS_SOCKET: "/var/run/tailscale/tailscaled.sock"
      TS_EXTRA_ARGS: "--reset --accept-routes"
      TS_AUTH_ONCE: "true"
      # TS_USERSPACE: "true"
      # TS_ROUTES: 172.18.0.0/16
      TS_HOSTNAME: mediaserver
      # TS_DEST_IP: 127.0.0.1
    entrypoint:
      - /bin/sh
      - -c
    command:
      - |
        # load the kernel module if it exists
        if modprobe wireguard 2>/dev/null
        then
          modinfo wireguard || true
          export TS_USERSPACE="${TS_USERSPACE:-false}"
        fi

        mkdir -p /dev/net
        [ ! -c /dev/net/tun ] && mknod /dev/net/tun c 10 200
        
        /usr/local/bin/containerboot &
        pid=$!

        sleep 5

        tailscale serve reset
        
        tailscale serve tls-terminated-tcp:8200 tcp://127.0.0.1:8200
        # tailscale serve tls-terminated-tcp:8096 tcp://127.0.0.1:8096
        tailscale serve tls-terminated-tcp:19999 tcp://127.0.0.1:19999
        tailscale serve tls-terminated-tcp:6789 tcp://127.0.0.1:6789
        tailscale serve tls-terminated-tcp:5076 tcp://127.0.0.1:5076
        tailscale serve tls-terminated-tcp:3579 tcp://127.0.0.1:3579
        tailscale serve tls-terminated-tcp:5055 tcp://127.0.0.1:5055
        # tailscale serve tls-terminated-tcp:32400 tcp://127.0.0.1:32400
        tailscale serve tls-terminated-tcp:9696 tcp://127.0.0.1:9696
        tailscale serve tls-terminated-tcp:81 tcp://127.0.0.1:81
        tailscale serve tls-terminated-tcp:7878 tcp://127.0.0.1:7878
        tailscale serve tls-terminated-tcp:8989 tcp://127.0.0.1:8989
        tailscale serve tls-terminated-tcp:8080 tcp://127.0.0.1:8080
        tailscale serve tls-terminated-tcp:8181 tcp://127.0.0.1:8181
        tailscale serve tls-terminated-tcp:8384 tcp://127.0.0.1:8384

        tailscale serve status

        wait $pid
